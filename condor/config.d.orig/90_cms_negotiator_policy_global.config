# This file should contain any policies for the negotiator

#==============================================
# ACCOUNTING GROUPS 
# Fair share settings
#==============================================
GROUP_ACCEPT_SURPLUS = true
GROUP_NAMES = production, analysis
GROUP_QUOTA_DYNAMIC_production = 0.5
GROUP_QUOTA_DYNAMIC_analysis = 0.5

#==============================================
# Negotiator daemon specific tweaks
#==============================================

# Making sure that the negotiator fetches its 
# ads from the local collector, not the remote
# HA one
NEGOTIATOR.COLLECTOR_HOST=vocms0815.cern.ch:9618

# Enabling negotiator to prefetch request lists
# from schedds
NEGOTIATOR_PREFETCH_REQUESTS = TRUE

# Maximum size of the requests to be pre-fetched
NEGOTIATOR_RESOURCE_REQUEST_LIST_SIZE=500

# Maximum time spent to pre-fetch requests
NEGOTIATOR_PREFETCH_REQUESTS_MAX_TIME=60

# Negotiator specific tweaks
# Size increased to avoid negotiation disconnects
NEGOTIATOR_SOCKET_CACHE_SIZE=100

# Maximum time in each negotiator cycle
# After this time the negotiator stops handing out
# slots to schedds. Ideally this should be half of
# glidein idle timeout
NEGOTIATOR_MAX_TIME_PER_CYCLE=600

# Maximum time spent talking to each submitter 
# per negotiation cycle. A submitter is a user
# schedd pair in condor
NEGOTIATOR_MAX_TIME_PER_SUBMITTER=70

# Maximum time spent talking to each schedd
# per a single pie spin
NEGOTIATOR_MAX_TIME_PER_PIESPIN=100

# Maximum time spent talking to each schedd
# during a negotiation cycle
NEGOTIATOR_MAX_TIME_PER_SCHEDD=60

# Network timeout for each schedd during
# a negotiation cycle
NEGOTIATOR_TIMEOUT=5

# Maximum sum of slots handed out to each submitter
# during each negotation cycle
# Value updated from 300 to 5000 (2016-02-15)
GROUP_QUOTA_ROUND_ROBIN_RATE=5000

# Group sort expression for the accounting groups
# Production goes first, then analysis and then null
# Added: https://cms-logbook.cern.ch/elog/GlideInWMS/2078
# (2015-05-11)
# Commented out since this was a temporary fix for production starvation
# Kept for future references
# GROUP_SORT_EXPR = ifThenElse(AccountingGroup is null, 0.0, ifThenElse(regexp("^production", AccountingGroup), -3.0, ifThenElse(regexp("^analysis", AccountingGroup), -2.0, -1.0)))

# production negotiates first for Tier1 resources
# ddavila 2017-10-17
# https://cms-logbook.cern.ch/elog/GlideInWMS/5177?mail0=34%20recipients
NEGOTIATORT1.GROUP_SORT_EXPR = ifThenElse(AccountingGroup is null, 0.0, ifThenElse(regexp("^production", AccountingGroup), -3.0, ifThenElse(regexp("^analysis", AccountingGroup), -2.0, -1.0)))

# Making sure that glideins with lower number of CPUs get
# filled first to avoid wasting CPU. Temporary fix until concurrency
# limits work
# Added 2015-06-22
# ELOG: https://cms-logbook.cern.ch/elog/GlideInWMS/2204
NEGOTIATOR_PRE_JOB_RANK=-Cpus

# Excluding the glideins without any cpus during negotiation 
# & excluding glideins about to retire
NEGOTIATOR_CONSIDER_PREEMPTION = FALSE
CMS_NEGOTIATOR_SLOT_CONSTRAINT = (($(NEGOTIATOR_CONSIDER_PREEMPTION:True) ? True : (Cpus > 0)) && (time() < GLIDEIN_ToRetire))

# Setting up two more negotiators to partition the pool.
# We run one negotiator for T2_US_*, one for T1_*/T2_CH_CERN, and one for everyone else.
# Logbook entry: https://cms-logbook.cern.ch/elog/GlideInWMS/3278

# Configuring an additional negotiator just for T1s and CERN
NEGOTIATORT1 = $(NEGOTIATOR)
NEGOTIATORT1_ARGS = -f -local-name NEGOTIATORT1
NEGOTIATORT1.NEGOTIATOR_LOG = $(LOG)/NegotiatorT1Log
NEGOTIATORT1.MATCH_LOG = $(LOG)/MatchT1Log
NEGOTIATORT1.SPOOL = $(SPOOL)/negotiator_t1

# Configuring an additional negotiator just for US T2s
NEGOTIATORUS = $(NEGOTIATOR)
NEGOTIATORUS_ARGS = -f -local-name NEGOTIATORUS
NEGOTIATORUS.NEGOTIATOR_LOG = $(LOG)/NegotiatorUSLog
NEGOTIATORUS.MATCH_LOG = $(LOG)/MatchUSLog
NEGOTIATORUS.SPOOL = $(SPOOL)/negotiator_us

# Adding 2nd and 3rd negotiators to daemons' list
VALID_SPOOL_FILES=$(VALID_SPOOL_FILES), negotiator_us, negotiator_t1
DAEMON_LIST = $(DAEMON_LIST), NEGOTIATORT1, NEGOTIATORUS

# Setting constaints for negotiators so they pick up correct
# set of slots and leave others

# ddavila 2018-05-08
# Adding the T3_*_Opportunistic (DODAS)
#NEGOTIATOR_SLOT_CONSTRAINT=!regexp("^(T1_|T2_US_)", GLIDEIN_CMSSite) && $(CMS_NEGOTIATOR_SLOT_CONSTRAINT)
NEGOTIATOR_SLOT_CONSTRAINT=(!regexp("^(T1_|T2_US_|T0_CH)", GLIDEIN_CMSSite) && $(CMS_NEGOTIATOR_SLOT_CONSTRAINT)) ||  regexp("^T3_[A-Z]*_Opportunistic", GLIDEIN_CMSSite)

# To include HLT during matchmaking
# Short circuiting the expression since it doesn't have the usual GLIDEIN_* classAds defined
NEGOTIATORT1.NEGOTIATOR_SLOT_CONSTRAINT=(regexp("^(T1_|T0_CH)", GLIDEIN_CMSSite) && ($(CMS_NEGOTIATOR_SLOT_CONSTRAINT))) || (GLIDEIN_CMSSite=?="T2_CH_CERN_HLT")
NEGOTIATORUS.NEGOTIATOR_SLOT_CONSTRAINT=regexp("^T2_US_", GLIDEIN_CMSSite) && $(CMS_NEGOTIATOR_SLOT_CONSTRAINT)

# Defining different fair share for T1s
NEGOTIATORT1.GROUP_QUOTA_DYNAMIC_analysis = 0.05
NEGOTIATORT1.GROUP_QUOTA_DYNAMIC_production = 0.95

# Adding multiple HA + replication daemons for multiple
# negotiators. Not added to the default HA configs since it
# is being used by tier0 pool central manager

# HAD for NEGOTIATORT1
HADT1 = $(HAD)
HADT1_ARGS = -f -local-name HADT1 -p 9900
HADT1_ENVIRONMENT = "_CONDOR_HAD_PORT=9900 _CONDOR_REPLICATION_PORT=9902"
HADT1.HAD_LOG = $(LOG)/HADT1Log
HADT1.HAD_CONTROLLEE = NEGOTIATORT1
MASTER_NEGOTIATORT1_CONTROLLER = HADT1

# HAD for NEGOTIATORUS
HADUS = $(HAD)
HADUS_ARGS = -f -local-name HADUS -p 9901
HADUS_ENVIRONMENT = "_CONDOR_HAD_PORT=9901 _CONDOR_REPLICATION_PORT=9903"
HADUS.HAD_LOG = $(LOG)/HADUSLog
HADUS.HAD_CONTROLLEE = NEGOTIATORUS
MASTER_NEGOTIATORUS_CONTROLLER = HADUS

# Replication daemon for NEGOTIATORT1
REPLICATIONT1 = $(REPLICATION)
REPLICATIONT1_ARGS = -f -local-name REPLICATIONT1 -p 9902
REPLICATIONT1_ENVIRONMENT = "_CONDOR_REPLICATION_PORT=9902 _CONDOR_SPOOL=$(SPOOL)/negotiator_t1"
REPLICATIONT1.REPLICATION_LOG = $(LOG)/ReplicationT1Log

# Replication daemon for NEGOTIATORUS
REPLICATIONUS = $(REPLICATION)
REPLICATIONUS_ARGS = -f -local-name REPLICATIONUS -p 9903
REPLICATIONUS_ENVIRONMENT = "_CONDOR_REPLICATION_PORT=9903 _CONDOR_SPOOL=$(SPOOL)/negotiator_us"
REPLICATIONUS.REPLICATION_LOG = $(LOG)/ReplicationUSLog

# Adding the new HADs and replication daemons to daemon list
DC_DAEMON_LIST =+ HADT1, HADUS, REPLICATIONT1, REPLICATIONUS
DAEMON_LIST = $(DAEMON_LIST), HADT1, HADUS, REPLICATIONT1, REPLICATIONUS

# Collector forwarding tweaks for global pool
#
# The collector patch from 8.3.8 has been incorporated into 8.5.4
# Setting the relevant knobs below
# Farrukh - 2016-08-09
#
# Do not forward ads on every change, only for relevant ones
COLLECTOR_FORWARD_FILTERING = TRUE

#ddavila 2017-10-23
#https://cms-logbook.cern.ch/elog/GlideInWMS/5723
#Ading Activity to the list of data which is inmediately forwarded from the child to the main collector
COLLECTOR_FORWARD_WATCH_LIST=$(COLLECTOR_FORWARD_WATCH_LIST),Activity

# How long until a daemon forwards all ads
COLLECTOR_FORWARD_INTERVAL = 600


# Tweak poolsize constraint to include the HLT. Added by Farrukh (Needs revision)
NEGOTIATOR_SLOT_POOLSIZE_CONSTRAINT = (State=!="Unclaimed" || isUndefined(GLIDEIN_ToRetire) || isUndefined(GLIDEIN_ToDie) || ((time() < GLIDEIN_ToRetire) && (time()+6*60*60 < GLIDEIN_ToDie)))
#
# # This enables the Depth-wise filling which makes the negotiator to try to fill all the available glideins before starting to use a new one.
# # Added by Farrukh https://cms-logbook.cern.ch/elog/GlideInWMS/4404
NEGOTIATOR_DEPTH_FIRST = TRUE
NEGOTIATOR_IGNORE_JOB_RANKS = TRUE
#
#
# # # Enabling high prio accounting group for high priority workflows 20170210
# # https://cms-logbook.cern.ch/elog/GlideInWMS/4771
GROUP_NAMES = $(GROUP_NAMES), highprio
GROUP_QUOTA_highprio = 1000000

